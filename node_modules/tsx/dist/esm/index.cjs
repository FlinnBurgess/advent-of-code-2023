"use strict";var M=require("worker_threads"),P=require("../node-features-92fd0e3b.cjs"),O=require("module"),v=require("../source-map.cjs"),l=require("path"),h=require("url"),R=require("../index-5d1f01e6.cjs"),L=require("../resolve-ts-path-3fca13b7.cjs"),N=require("../client-2f0df4a6.cjs"),p=require("get-tsconfig"),E=require("fs");require("esbuild"),require("crypto"),require("os"),require("../temporary-directory-2a027842.cjs"),require("net"),require("../get-pipe-path-86e97fc9.cjs");var d=typeof document<"u"?document.currentScript:null;const D=()=>{v.installSourceMapSupport(),O.register("./index.mjs",{parentURL:typeof document>"u"?require("url").pathToFileURL(__filename).href:d&&d.src||new URL("esm/index.cjs",document.baseURI).href,data:!0})},f=new Map;async function b(e){if(f.has(e))return f.get(e);if(!await E.promises.access(e).then(()=>!0,()=>!1)){f.set(e,void 0);return}const r=await E.promises.readFile(e,"utf8");try{const n=JSON.parse(r);return f.set(e,n),n}catch{throw new Error(`Error parsing: ${e}`)}}async function x(e){let t=new URL("package.json",e);for(;!t.pathname.endsWith("/node_modules/package.json");){const r=h.fileURLToPath(t),n=await b(r);if(n)return n;const a=t;if(t=new URL("../package.json",t),t.pathname===a.pathname)break}}async function A(e){var t;const r=await x(e);return(t=r==null?void 0:r.type)!=null?t:"commonjs"}const m=process.env.TSX_TSCONFIG_PATH?{path:l.resolve(process.env.TSX_TSCONFIG_PATH),config:p.parseTsconfig(process.env.TSX_TSCONFIG_PATH)}:p.getTsconfig(),I=m&&p.createFilesMatcher(m),q=m&&p.createPathsMatcher(m),S="file://",g=/\.([cm]?ts|[tj]sx)($|\?)/,J=/\.json(?:$|\?)/,C=e=>{const t=l.extname(e);if(t===".json")return"json";if(t===".mjs"||t===".mts")return"module";if(t===".cjs"||t===".cts")return"commonjs"},W=e=>{const t=C(e);if(t)return t;if(g.test(e))return A(e)},k=v.installSourceMapSupport(),U=/\/(?:$|\?)/,G=async e=>{if(!e)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`)},H=()=>`
const require = getBuiltin('module').createRequire("${typeof document>"u"?require("url").pathToFileURL(__filename).href:d&&d.src||new URL("esm/index.cjs",document.baseURI).href}");
require('../source-map.cjs').installSourceMapSupport();
`,y=async(e,t,r)=>{const n=await e(t,r);return!n.format&&n.url.startsWith(S)&&(n.format=await W(n.url)),n},X=[".js",".json",".ts",".tsx",".jsx"];async function w(e,t,r){const[n,a]=e.split("?");let c;for(const o of X)try{return await y(r,n+o+(a?`?${a}`:""),t)}catch(s){if(c===void 0&&s instanceof Error){const{message:i}=s;s.message=s.message.replace(`${o}'`,"'"),s.stack=s.stack.replace(i,s.message),c=s}}throw c}async function j(e,t,r){const n=U.test(e),a=n?"index":"/index",[c,o]=e.split("?");try{return await w(c+a+(o?`?${o}`:""),t,r)}catch(s){if(!n)try{return await w(e,t,r)}catch{}const i=s,{message:u}=i;throw i.message=i.message.replace(`${a.replace("/",l.sep)}'`,"'"),i.stack=i.stack.replace(u,i.message),i}}const $=/^\.{1,2}\//,F=async function(e,t,r,n){var a;if(U.test(e))return await j(e,t,r);const c=e.startsWith(S)||$.test(e);if(q&&!c&&!((a=t.parentURL)!=null&&a.includes("/node_modules/"))){const o=q(e);for(const s of o)try{return await F(h.pathToFileURL(s).toString(),t,r)}catch{}}if(g.test(t.parentURL)){const o=L.resolveTsPath(e);if(o)for(const s of o)try{return await y(r,s,t)}catch(i){const{code:u}=i;if(u!=="ERR_MODULE_NOT_FOUND"&&u!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}}try{return await y(r,e,t)}catch(o){if(o instanceof Error&&!n){const{code:s}=o;if(s==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await j(e,t,r)}catch(i){if(i.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw i}if(s==="ERR_MODULE_NOT_FOUND")try{return await w(e,t,r)}catch{}}throw o}};let _;N.connectingToServer.then(e=>{_=e},()=>{});const T=P.importAttributes?"importAttributes":"importAssertions",z=async function(e,t,r){var n;_&&_({type:"dependency",path:e}),J.test(e)&&(t[T]||(t[T]={}),t[T].type="json");const a=await r(e,t);if(!a.source)return a;const c=e.startsWith("file://")?h.fileURLToPath(e):e,o=a.source.toString();if(a.format==="json"||g.test(e)){const s=await R.transform(o,c,{tsconfigRaw:(n=I)==null?void 0:n(c)});return{format:"module",source:k(s)}}if(a.format==="module"){const s=R.transformDynamicImport(c,o);s&&(a.source=k(s))}return a};P.supportsModuleRegister&&M.isMainThread&&D(),exports.globalPreload=H,exports.initialize=G,exports.load=z,exports.resolve=F;
